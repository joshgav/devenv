apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-apiserver
  labels:
    app: spring-apiserver
    app.kubernetes.io/component: spring-apiserver
    app.kubernetes.io/instance: spring-apiserver
  annotations:
    app.openshift.io/connects-to: >-
      [{"apiVersion":"postgres-operator.crunchydata.com/v1beta1","kind":"PostgresCluster","name":"apiserver-dbcluster"}]
    app.openshift.io/vcs-uri: 'https://github.com/joshgav/spring-apiserver'
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "spring-apiserver:latest"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        }
      ]
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: spring-apiserver
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
      labels:
        app.kubernetes.io/component: spring-apiserver
    spec:
      containers:
        - name: spring-apiserver
          image: spring-apiserver:latest
          imagePullPolicy: Always
          envFrom:
            - prefix: PG_
              secretRef:
                name: apiserver-dbcluster-pguser-apiserver
          env:
            - name: HOME
              value: /opt/jboss
          ports:
            - containerPort: 8080
              protocol: TCP
              name: web
            - containerPort: 9090
              protocol: TCP
              name: actuator
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 10
          volumeMounts:
            - mountPath: /opt/config
              name: app-properties
      volumes:
        - name: app-properties
          configMap:
            name: spring-apiserver-app-properties
            optional: true
